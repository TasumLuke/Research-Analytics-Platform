name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch: {}

jobs:
  build:
    name: Node CI & optional Python smoke test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]   # change or add 16.x, 20.x if you want a matrix

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'   # builtin npm cache support

      - name: Cache npm (fallback)
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-

      - name: Install JS dependencies
        run: npm ci

      - name: Lint (if configured)
        run: npm run lint
        # remove the next line if you want lint failures to block the build
        continue-on-error: false

      - name: Run tests
        run: |
          # many test runners accept extra flags; adjust if needed
          npm test --silent

      - name: Build (production)
        run: npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: site-dist
          path: |
            dist
            build # include both common build folders just in case

      # ---------- Optional Python support ----------
      # We only run Python steps if a requirements.txt file exists.
      - name: Check for requirements.txt
        id: reqcheck
        run: |
          if [ -f requirements.txt ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Cache pip (optional)
        if: steps.reqcheck.outputs.exists == 'true'
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}

      - name: Install Python requirements (optional)
        if: steps.reqcheck.outputs.exists == 'true'
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Python smoke test (optional)
        if: steps.reqcheck.outputs.exists == 'true'
        run: |
          # a tiny sanity check to show that the Python environment is fine
          python -c "import sys; print('python', sys.version)"
          python -c "import pandas as pd; print('pandas', pd.__version__)"
